-----------------------------------------------------------------------------------------------------------------------------------------
-- NOTIFY
-----------------------------------------------------------------------------------------------------------------------------------------
Player = GetPlayerServerId(PlayerId())

local ValidNotify = {
    ["negado"] = true,
    ["sucesso"] = true,
    ["importante"] = true,
    ["azul"] = true,
    ["sangramento"] = true,
    ["compras"] = true,
    ["fome"] = true,
    ["sede"] = true,
    ["police"] = true,
    ["paramedic"] = true,
    ["admin"] = true,
    ["dica"] = true,
    ["amor"] = true,
    ["airdrop"] = true,
}

RegisterNetEvent("Notify")
AddEventHandler("Notify",function(Css,Message,Timer,Title)
    if ValidNotify[Css] then
        SendNUIMessage({ Action = "Notify", Css = Css, Message = Message, Timer = Timer or 5000, Title = Title })
    else
        SendNUIMessage({ Action = "Notify", Css = "importante", Message = Message, Title = Title, Timer = Timer or 5000 })
    end
end)

RegisterNetEvent("Notify:Text")
AddEventHandler("Notify:Text",function(Text)
    SendNUIMessage({ Action = "Text", Message = Text})
end)

RegisterNetEvent("Announce")
AddEventHandler("Announce",function(Css,Message,Timer,Title)
    if ValidNotify[Css] then
        SendNUIMessage({ Action = "Announce", Css = Css, Message = Message, Timer = Timer or 5000, Title = Title })
    else
        SendNUIMessage({ Action = "Announce", Css = "admin", Message = Message, Title = Title, Timer = Timer or 5000 })
    end
end)

local infoHelp = true
function openCloseShortCuts()
    TriggerEvent("help:open")
    infoHelp = not infoHelp
    
    -- Sempre envia um estado inicial limpo quando abre
    if infoHelp then
        -- Se estamos ativando o menu, enviar estado resetado
        SendNUIMessage({ Action = "Tutorial", Status = true, Reset = true })
        -- For√ßar ativa√ß√£o do cursor explicitamente
        SetNuiFocus(true, true)
        display = true
    else
        -- Se estamos fechando, apenas fechar
        SendNUIMessage({ Action = "Tutorial", Status = false })
        -- For√ßar desativa√ß√£o do cursor explicitamente
        SetNuiFocus(false, false)
        display = false
        
        -- Garantir que o controle seja restaurado
        SetNuiFocusKeepInput(false)
    end
end

RegisterCommand("help2",openCloseShortCuts)
RegisterKeyMapping("help2","Open/Close HELP","keyboard","EQUALS")

RegisterNetEvent("notify:Tutorial")
AddEventHandler("notify:Tutorial",function()
    openCloseShortCuts()
end)


local HelpNotify = {
    "Voc√™ sabia que n√£o pode ser assaltado enquanto estiver no modo safe?",
    "Trabalho de Pescador, Minerador e Agricultor est√£o bufados! [Procure no Mapa]",
    "Voc√™ pode fazer TestDrive gratuitamente de carros vips diretamente na concession√°ria da cidade!",
    "Em breve puni√ß√µes ser√£o aplicadas em jogadores com muitos deslikes.",
    "Voc√™ pode den√∫nciar um jogador que deslogou em meio a uma a√ß√£o atrav√©s da box deixada no local da morte! [Advert√™ncia Autom√°tica]",
    "Trabalho de Minera√ß√£o de Bitcoin te permite ganhar dinheiro mesmo enquanto est√° AFK! [Pr√≥ximo ao Cassino]",
    "Voc√™ ganha üíé diamantes por tempo online, use o comando /diamantes para acessar a loja de diamantes!",
    "Voc√™ pode avaliar outro jogador (üëç/üëé) segurando ALT e mirando sobre ele!",
    "Voc√™ sabia que o SantaGroup √© uma empresa com atualmente 9 cidades de sucesso online e que j√° completou 3 anos de vida?",
    "Voc√™ sabia que o SantaGroup foi um patrocinador de BGS 2022? [Acesse nosso instagram @santagroup_]",
    "Voc√™ sabia que hoje mais de 40 colaboradores trabalham full-time no SantaGroup?",
    "Voc√™ sabia que carros vip al√©m de te dar mais respeito com os amigos correm mais que os demais carros da cidade?",
    "Voc√™ sabia que Anti-RP n√£o s√£o bem vindos aqui? E que voc√™ pode den√∫nciar um mau jogador? [Aperte F5]",
    "Voc√™ sabia que existe um FAQ de D√∫vidas Frequentes na cidade? [Aperte F5]",
    "Voc√™ sabia que pode abrir a loja vip da cidade a qualquer momento atrav√©s do comando /lojavip?",
    "Voc√™ sabia que pode avaliar um Staff como positivo ou negativo na prefeitura do Pier?",
    "Recrutamentos para a pol√≠cia s√£o feitos diariamente! [Procure no Mapa]",
    "Jogadores ganham benef√≠cios por recrutar iniciantes para Pol√≠cia, Hospital e Fac√ß√µes!",
    "O Pier √© o Ponto Central da Cidade e onde os moradores se socializam! [Procure no Mapa]",
    "Voc√™ ganha benef√≠cios gratuitamente por estar online atrav√©s do BattlePass! [Aperte F4]",
    "Os produtos mais vendidos na loja vip atualmente s√£o o Vip Ouro e BattlePass! [digite /lojavip]",
    "Seu personagem n√£o morre mais de fome e sede enquanto voc√™ estiver AFK!",
    "Em breve jogadores que receberem muitas avalia√ß√µes como toxicas ter√£o s√©rios problemas?",   
    "Voc√™ sabia que o BattlePass √© renovado todo dia 01 de cada m√™s?",
    "Voc√™ sabia que M√©dico √© uma profiss√£o legal que paga muito bem?",
    "Voc√™ sabia que pode salvar sua o preset da sua roupa atual e voltar facilmente pra ela depois? [F9/Roupas/Guardar]"
}

local HelpDone = {}

AddStateBagChangeHandler('Active',('player:%s'):format(Player) , function(_, _, Value)
    local Ped = PlayerPedId()
    if Value then
        CreateThread(function()
            Wait(2500)
            while true do
                -- if not LocalPlayer["state"]["Newbie"] then
                --     return
                -- end
                ::Another::
                if #HelpDone == #HelpNotify then
                    HelpDone = {}
                end
                local Random = math.random(1,#HelpNotify)
                if HelpDone[Random] then
                    goto Another
                end
                HelpDone[Random] = true
                TriggerEvent("Notify","dica",HelpNotify[Random],30000,"Dicas")
                Wait(1000*60*5)
            end
        end)
    end 
end)

local display = false

RegisterNUICallback("enableCursor", function(data, cb)
    SetNuiFocus(true, true)
    display = true
    if cb then cb('ok') end
end)

RegisterNUICallback("disableCursor", function(data, cb)
    SetNuiFocus(false, false)
    SetNuiFocusKeepInput(false)
    display = false
    
    -- Log para debug
    print("Cursor desativado com sucesso")
    
    if cb then cb('ok') end
end)

-- Adicionar callback para fechar o menu
RegisterNUICallback("closeMenu", function(data, cb)
    -- Desativar o cursor
    SetNuiFocus(false, false)
    display = false
    
    -- Garantir que o controle seja restaurado
    SetNuiFocusKeepInput(false)
    
    -- Atualizar o estado do menu
    infoHelp = false
    
    -- Fechar o menu na UI
    SendNUIMessage({ Action = "Tutorial", Status = false })
    
    -- Log para debug
    print("Menu fechado e cursor desativado")
    
    if cb then cb('ok') end
end)

-- Adicionar uma fun√ß√£o para for√ßar a restaura√ß√£o do controle
function ForceRestoreControls()
    SetNuiFocus(false, false)
    SetNuiFocusKeepInput(false)
    display = false
    infoHelp = false
    
    -- Enviar mensagem NUI para garantir que a UI feche
    SendNUIMessage({ Action = "Tutorial", Status = false })
    
    -- Garantir que todas as teclas sejam habilitadas novamente
    EnableAllControlActions(0)
    EnableAllControlActions(1)
    EnableAllControlActions(2)
    
    -- Log para debug
    print("Controles for√ßadamente restaurados")
end

-- Comando de emerg√™ncia para restaurar controles
RegisterCommand("restaurar_controles", function()
    ForceRestoreControls()
    TriggerEvent("Notify", "sucesso", "Controles restaurados com sucesso.", 3000)
end, false)

-- Thread para verificar e restaurar controles em caso de problema
CreateThread(function()
    while true do
        -- Se o menu estiver fechado mas o cursor ainda estiver ativo
        if not infoHelp and display then
            ForceRestoreControls()
            print("Detectado inconsist√™ncia: Menu fechado mas cursor ativo. Corrigindo...")
        end
        
        Wait(5000) -- Verificar a cada 5 segundos
    end
end)

-- Registrar evento para o ESC do teclado (complemento ao handler no JavaScript)
RegisterCommand("+escapeKey", function()
    if display or infoHelp then
        infoHelp = false
        display = false
        SendNUIMessage({ Action = "Tutorial", Status = false })
        SetNuiFocus(false, false)
        SetNuiFocusKeepInput(false)
        print("Restaurando controles via tecla ESC")
    end
end, false)

RegisterKeyMapping("+escapeKey", "Fechar menu ajuda", "keyboard", "ESCAPE")

-- Disparar restaura√ß√£o de controles quando o jogador entrar no jogo
AddEventHandler('playerSpawned', function()
    ForceRestoreControls()
    print("Restaurando controles ao spawn do jogador")
end)

-- Acionado quando o recurso √© iniciado
AddEventHandler('onClientResourceStart', function(resourceName)
    if (GetCurrentResourceName() ~= resourceName) then
        return
    end
    
    -- Garantir que os controles estejam corretos ao iniciar o recurso
    ForceRestoreControls()
    print("Recurso iniciado: Restaurando controles")
end)

-- Acionado quando o jogador se reconecta
RegisterNetEvent('onClientMapStart')
AddEventHandler('onClientMapStart', function()
    -- For√ßar reset em caso de reconex√£o
    ForceRestoreControls()
    print("Mapa iniciado: Restaurando controles")
end)